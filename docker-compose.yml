version: '3'

services:
  lion-app:
    depends_on:
      - db
    container_name: lion-app-dc
    build: 
      context: .
      dockerfile: ./Dockerfile
    image: "lion-app:0.5"
    volumes:
      - ~/.aws:/root/.aws:ro # ro: read only
      - ./:/app
      - "lion-app-v:/var/www/html"
    ports:
      - "8000:8000"
    command: 
      - "/start"
    env_file:
      - ./.envs/local/django
      - ./.envs/local/server
      - ./.envs/local/db
      - ./.envs/prod/ncp
    environment:
      - AWS_SECRET_NAME=like/lion/lecture

  nginx:
    # restart: always
    depends_on:
      - lion-app
    container_name: lion-nginx-dc
    build: 
      context: .
      dockerfile: Dockerfile.nginx_ubuntu
    image: lion-nginx
    volumes:
      - "lion-app-v:/var/www/html"
    ports:
      - "8888:80"
    env_file:
      - ./.envs/local/server

  db:
    container_name: lion-postgres-dc
    image: postgres:15
    ports:
      - 5432:5432
    env_file:
      - ./.envs/local/db
    volumes:
      - postgres-data:/var/lib/postgresql/data

  prom:
    container_name: lion-prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - "--web.console.templates=/etc/prometheus/consoles/"
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=lion
      - GF_SECURITY_ADMIN_PASSWORD=tiger1234
  

  # mongo:
  #   image: mongo:latest
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongo-data:/data/db

volumes:
  lion-app-v:
  postgres-data:
  # mongo-data:

